import{a as j}from"./chunk-2EQVSMUF.js";import{a as pe}from"./chunk-EPQ6NRZE.js";import{B as p,D as O,E as a,Ea as H,F as n,G as z,Ha as W,Ia as v,J as M,Ja as X,K as b,Ka as Z,L as h,La as E,O as r,Oa as y,Q as T,Ra as g,Ta as R,Ua as ee,Va as ie,Wa as te,Ya as $,_a as oe,ab as ne,ba as N,bb as ae,c as f,ca as A,cb as re,da as J,db as se,eb as le,h as w,ha as K,ka as U,kb as ce,l as F,lb as V,m as I,mb as de,p as Y,q as D,r as P,s as B,x as c,y as x,z as u}from"./chunk-XMWGSLYE.js";function Se(o,i){if(o&1){let e=M();a(0,"div",3)(1,"label")(2,"input",4),b("change",function(){let s=D(e).$implicit,l=h(2);return P(l.seleccionarTurno(s))}),n(),r(3),n()()}if(o&2){let e=i.$implicit;c(2),p("value",e),c(),T(" ",e," ")}}function Ce(o,i){if(o&1&&(a(0,"div")(1,"label",1),r(2,"Horarios Disponibles"),n(),u(3,Se,4,2,"div",2),n()),o&2){let e=h();c(3),p("ngForOf",e.turnos)}}function xe(o,i){o&1&&(a(0,"div")(1,"label",1),r(2,"Horarios Disponibles"),n(),a(3,"p"),r(4,"Ya no quedan turnos disponibles para la fecha seleccionada!!"),n()())}var q=class o{constructor(i){this.firestore=i}disponibilidad;turnoSeleccionado=new B;turnos=[];ngOnChanges(i){i.disponibilidad&&this.disponibilidad&&this.generarTurnos()}generarTurnos(){return f(this,null,function*(){if(this.turnos=[],!this.disponibilidad)return;let i=this.convertirATiempo(this.disponibilidad.horaInicio),e=this.convertirATiempo(this.disponibilidad.horaFin),t=this.disponibilidad.duracionTurnos,s=yield this.obtenerTurnosOcupados(this.disponibilidad.fecha);console.log("Turnos ocupados:",s);let l=new Date(i);for(;l<e;){let d=new Date(l);if(d.setMinutes(l.getMinutes()+t),d<=e){let m=`De ${this.formatearHora(l)} hs a ${this.formatearHora(d)} hs`;console.log("Generando turno:",m),s.includes(m)?console.log(`Turno ocupado omitido: ${m}`):this.turnos.push(m)}l=d}})}obtenerTurnosOcupados(i){return f(this,null,function*(){let e=[];try{console.log("Iniciando consulta para obtener turnos ocupados.");let t=y(v(this.firestore,"turnos"),g("fecha","==",i));console.log("Consultando Firestore para la fecha:",i);let s=yield E(t);console.log("Documentos encontrados para la fecha:",s.size),console.log("Disponibilidad actual:",this.disponibilidad),s.forEach(l=>{let d=l.data();if(console.log("Documento procesado:",d),d.medico===this.disponibilidad?.especialista&&d.estado!=="Cancelado"){let m=d.horario,[_,S]=m.split(" - "),C=`De ${_} hs a ${S} hs`;console.log("Turno ocupado encontrado en Firestore:",C),e.push(C)}else console.log("Turno omitido:",d)}),console.log("Total de turnos ocupados encontrados:",e.length)}catch(t){console.error("Error al obtener turnos ocupados:",t)}return e})}convertirATiempo(i){let[e,t]=i.split(":").map(Number),s=new Date;return s.setHours(e,t,0,0),s}formatearHora(i){let e=i.getHours().toString().padStart(2,"0"),t=i.getMinutes().toString().padStart(2,"0");return`${e}:${t}`}seleccionarTurno(i){this.turnoSeleccionado.emit(i)}static \u0275fac=function(e){return new(e||o)(x(H))};static \u0275cmp=F({type:o,selectors:[["app-horarios-disponibles"]],inputs:{disponibilidad:"disponibilidad"},outputs:{turnoSeleccionado:"turnoSeleccionado"},features:[Y],decls:2,vars:2,consts:[[4,"ngIf"],[1,"info"],["class","turnos-rb",4,"ngFor","ngForOf"],[1,"turnos-rb"],["type","radio","name","turno",3,"change","value"]],template:function(e,t){e&1&&u(0,Ce,4,1,"div",0)(1,xe,5,0,"div",0),e&2&&(p("ngIf",t.turnos.length>0),c(),p("ngIf",t.turnos.length===0))},dependencies:[N,A],styles:[".info[_ngcontent-%COMP%]{color:#ddd;font-family:ubuntu;margin-bottom:5px}.turnos-rb[_ngcontent-%COMP%]{color:#fff}p[_ngcontent-%COMP%]{color:red}"]})};function Ee(o,i){if(o&1&&(a(0,"option",19),r(1),n()),o&2){let e=i.$implicit;p("value",e.email),c(),T(" ",e.nombre," ")}}function ye(o,i){o&1&&(a(0,"div")(1,"small",20),r(2,"Este campo es obligatorio."),n()())}function Te(o,i){if(o&1&&(a(0,"label",17),r(1,"Paciente"),n(),a(2,"select",18)(3,"option",7),r(4,"Elige..."),n(),u(5,Ee,2,2,"option",8),n(),u(6,ye,3,0,"div",9)),o&2){let e=h();c(5),p("ngForOf",e.pacientesDisponibles),c(),p("ngIf",(e.paciente==null?null:e.paciente.hasError("required"))&&(e.paciente==null?null:e.paciente.touched))}}function De(o,i){if(o&1&&(a(0,"option",19),r(1),n()),o&2){let e=i.$implicit;p("value",e),c(),T(" ",e," ")}}function Pe(o,i){o&1&&(a(0,"div")(1,"small",20),r(2,"Este campo es obligatorio."),n()())}function Oe(o,i){if(o&1&&(a(0,"option",19),r(1),n()),o&2){let e=i.$implicit;p("value",e.email),c(),T(" ",e.nombreCompleto," ")}}function Me(o,i){o&1&&(a(0,"div")(1,"small",20),r(2,"Este campo es obligatorio."),n()())}function we(o,i){if(o&1&&(a(0,"label",21),r(1,"Especialista"),n(),a(2,"select",22)(3,"option",7),r(4,"Elige..."),n(),u(5,Oe,2,2,"option",8),n(),u(6,Me,3,0,"div",9)),o&2){let e=h();c(5),p("ngForOf",e.especialistasDisponibles),c(),p("ngIf",(e.especialista==null?null:e.especialista.hasError("required"))&&(e.especialista==null?null:e.especialista.touched))}}function Fe(o,i){o&1&&(a(0,"label",21),r(1,"Especialista"),n(),a(2,"small",20),r(3,"Seleccionar especialidad."),n())}function Ie(o,i){if(o&1){let e=M();a(0,"app-calendario",23),b("dateSelected",function(s){D(e);let l=h();return P(l.handleDateSelected(s))}),n()}if(o&2){let e=h();p("fechasDisponibles",e.fechasDisponiblesStrings)}}function Ne(o,i){o&1&&(a(0,"p"),r(1,"Para utilizar el calendario primero deber\xE1s aplicar un filtro"),n(),a(2,"div",24),z(3,"app-calendario"),n())}function Ae(o,i){if(o&1){let e=M();a(0,"app-horarios-disponibles",25),b("turnoSeleccionado",function(s){D(e);let l=h();return P(l.handleAppointmentSelected(s))}),n()}if(o&2){let e=h();p("disponibilidad",e.disponibilidadSeleccionada)}}function He(o,i){o&1&&(a(0,"p"),r(1,"Para elegir un horario primero deber\xE1s elegir una fecha"),n())}var L=class o{constructor(i,e,t,s){this.alert=i;this.firestore=e;this.auth=t;this.router=s}fechaSeleccionada="";form;isLoading=!1;mostrarCalendario=!1;especialidadesDisponibles;especialistasDisponibles=[];especialistaSeleccionadoEmail="";fechasDisponibles=[];disponibilidadSeleccionada=null;turnoSeleccionado="";emailPaciente;isAdmin=!1;pacientesDisponibles;horaInicioSeleccionada;horaFinSeleccionada;handleDateSelected(i){this.fechaSeleccionada=i,this.disponibilidadSeleccionada=this.fechasDisponibles.find(e=>e.fecha===i)||null}handleAppointmentSelected(i){let e=/De (\d{1,2}:\d{2}) hs a (\d{1,2}:\d{2}) hs/,t=i.match(e);t&&(this.horaInicioSeleccionada=t[1],this.horaFinSeleccionada=t[2])}ngOnInit(){this.form=new te({especialidad:new $("",R.required),especialista:new $("",R.required)}),this.buscarEspecialidadesDisponibles();let i=this.auth.obtenerUsuarioLogueado();i&&this.auth.getUserRole(i).then(e=>{e==="Admin"&&(this.isAdmin=!0,this.buscarPacientesDisponibles(),this.form.addControl("paciente",new $("",R.required)),this.form.get("paciente")?.valueChanges.subscribe(t=>{this.emailPaciente=t})),e==="Paciente"&&(this.emailPaciente=i)}),console.log(this.especialistasDisponibles)}buscarEspecialidadesDisponibles(){return f(this,null,function*(){let i=new Set;try{let e=v(this.firestore,"usuarios"),t=y(e,g("rol","==","Medico"));(yield E(t)).forEach(l=>{let m=l.data().especialidades||[];Array.isArray(m)&&m.forEach(_=>i.add(_))}),this.especialidadesDisponibles=Array.from(i)}catch(e){console.error("Error al obtener especialidades: ",e),this.alert.mostrarError("Error al obtener especialidades")}})}buscarPacientesDisponibles(){return f(this,null,function*(){let i=new Set;try{let e=v(this.firestore,"usuarios"),t=y(e,g("rol","==","Paciente"));(yield E(t)).forEach(l=>{let d=l.data(),m={email:d.email,nombre:`${d.nombre} ${d.apellido}`,documento:d.documento};i.add(m)}),this.pacientesDisponibles=Array.from(i)}catch{this.alert.mostrarError("Error al obtener pacientes")}})}buscarEspecialistasDisponibles(){return f(this,null,function*(){let i=this.form.get("especialidad")?.value;if(this.especialistasDisponibles=[],!i)return;let e=[];try{let t=v(this.firestore,"usuarios"),s=y(t,g("rol","==","Medico"),g("especialidades","array-contains",i));(yield E(s)).forEach(d=>{let m=d.data(),_=`${m.nombre} ${m.apellido}`,S=m.email;e.push({nombreCompleto:_,email:S})}),this.especialistasDisponibles=e}catch(t){console.error("Error al obtener especialistas: ",t),this.alert.mostrarError("Error al obtener especialistas")}})}onSubmit(){return f(this,null,function*(){if(console.log("se entro al on submit"),this.form.valid){this.isLoading=!0;let i=this.form.get("especialista")?.value,e=this.especialistasDisponibles.find(t=>t.email===i);this.especialistaSeleccionadoEmail=e?e.email:"";try{this.mostrarCalendario=!0,yield this.buscarDisponibilidad()}catch{this.alert.mostrarError("Error inesperado")}finally{this.isLoading=!1}}else this.alert.mostrarError("El formulario es inv\xE1lido")})}buscarDisponibilidad(){return f(this,null,function*(){let i=this.especialistaSeleccionadoEmail,e=this.form.get("especialidad")?.value;if(!i||!e)return;let t=new Date;t.setHours(0,0,0,0);let s=new Date;s.setDate(t.getDate()+15),s.setHours(0,0,0,0);try{console.log("Especialista seleccionado:",i);let l=X(this.firestore,`disponibilidades/${i}`),d=yield Z(l);if(d.exists()){let _=d.data()[e]||{};this.fechasDisponibles=Object.entries(_).filter(([S,C])=>{let[ue,fe,he]=S.split("-").map(Number),G=new Date(he,fe-1,ue);return G.setHours(0,0,0,0),G>=t&&G<=s}).map(([S,C])=>({especialista:i,especialidad:e,fecha:S,horaInicio:C.horaInicio,horaFin:C.horaFin,duracionTurnos:C.duracionTurnos})),console.log("Fechas disponibles estructuradas:",this.fechasDisponibles)}else this.alert.mostrarError("No se encontr\xF3 disponibilidad para el especialista seleccionado")}catch(l){console.error("Error al buscar disponibilidad:",l),this.alert.mostrarError("Error al buscar disponibilidad")}})}isFormValid(){return console.log(this.emailPaciente),console.log(this.especialistaSeleccionadoEmail),console.log(this.form.get("especialidad")?.value),console.log(this.fechaSeleccionada),console.log(this.horaInicioSeleccionada),console.log(this.horaFinSeleccionada),!!(this.emailPaciente&&this.especialistaSeleccionadoEmail&&this.form.get("especialidad")?.value&&this.fechaSeleccionada&&this.horaInicioSeleccionada&&this.horaFinSeleccionada)}onSolicitarTurno(){return f(this,null,function*(){if(!this.isFormValid()){console.log("Formulario inv\xE1lido, faltan campos requeridos.");return}try{this.isLoading=!0,console.log("Iniciando solicitud de turno...");let i=v(this.firestore,"turnos"),e=this.fechaSeleccionada.includes("T")?this.fechaSeleccionada.split("T")[0]:this.fechaSeleccionada;console.log("Valor de fechaSolo (debe ser solo la fecha):",e);let t=y(i,g("fecha","==",e),g("paciente","==",this.emailPaciente),g("especialidad","==",this.form.get("especialidad")?.value));if(!(yield E(t)).empty){this.alert.mostrarError("Solo es posible reservar un turno por d\xEDa para esta especialidad");return}let l={medico:this.especialistaSeleccionadoEmail,fecha:e,horario:`${this.horaInicioSeleccionada} - ${this.horaFinSeleccionada}`,paciente:this.emailPaciente,especialidad:this.form.get("especialidad")?.value,estado:"Pendiente",fechaSolicitud:new Date};yield W(i,l),console.log("Turno solicitado exitosamente."),this.alert.mostrarSuccess("Turno solicitado exitosamente"),setTimeout(()=>{this.router.navigate(["/home"])},1500)}catch(i){console.error("Error al solicitar turno:",i),this.alert.mostrarError("Error al solicitar turno")}finally{this.isLoading=!1}})}get especialidad(){return this.form.get("especialidad")}get especialista(){return this.form.get("especialista")}get paciente(){return this.form.get("paciente")}get fechasDisponiblesStrings(){return this.fechasDisponibles.map(i=>i.fecha)}static \u0275fac=function(e){return new(e||o)(x(de),x(H),x(pe),x(K))};static \u0275cmp=F({type:o,selectors:[["app-solicitar-turno"]],decls:35,vars:10,consts:[[3,"isLoading"],[1,"banner"],[1,"solicitud-turnos"],[1,"filtros-laterales"],[3,"ngSubmit","formGroup"],["for","especialidad"],["formControlName","especialidad",3,"change"],["value","","disabled","","selected",""],[3,"value",4,"ngFor","ngForOf"],[4,"ngIf"],["type","submit",3,"disabled"],[1,"turnos"],[1,"calendario"],[3,"fechasDisponibles"],[1,"horarios"],[3,"disponibilidad"],["type","submit",3,"click","disabled"],["for","paciente"],["formControlName","paciente"],[3,"value"],[1,"error"],["for","especialista"],["formControlName","especialista"],[3,"dateSelected","fechasDisponibles"],[1,"forbidden"],[3,"turnoSeleccionado","disponibilidad"]],template:function(e,t){e&1&&(z(0,"app-loading",0),a(1,"section")(2,"div",1)(3,"h2"),r(4,"SOLICITAR TURNOS"),n()()(),a(5,"section",2)(6,"div",3)(7,"h3"),r(8," FILTROS "),n(),a(9,"form",4),b("ngSubmit",function(){return t.onSubmit()}),u(10,Te,7,2),a(11,"label",5),r(12,"Especialidad"),n(),a(13,"select",6),b("change",function(){return t.buscarEspecialistasDisponibles()}),a(14,"option",7),r(15,"Elige..."),n(),u(16,De,2,2,"option",8),n(),u(17,Pe,3,0,"div",9)(18,we,7,2)(19,Fe,4,0),a(20,"button",10),r(21," Aplicar "),n()()(),a(22,"div",11)(23,"div",12)(24,"h3"),r(25," Seleccione una fecha "),n(),u(26,Ie,1,1,"app-calendario",13)(27,Ne,4,0),n(),a(28,"div",14)(29,"h3"),r(30," Seleccione un horario "),n(),u(31,Ae,1,1,"app-horarios-disponibles",15)(32,He,2,0,"p"),a(33,"button",16),b("click",function(){return t.onSolicitarTurno()}),r(34," Solicitar "),n()()()()),e&2&&(p("isLoading",t.isLoading),c(9),p("formGroup",t.form),c(),O(t.isAdmin?10:-1),c(6),p("ngForOf",t.especialidadesDisponibles),c(),p("ngIf",(t.especialidad==null?null:t.especialidad.hasError("required"))&&(t.especialidad==null?null:t.especialidad.touched)),c(),O(t.especialistasDisponibles.length>0?18:19),c(2),p("disabled",t.form.invalid),c(6),O(t.mostrarCalendario?26:27),c(5),O(t.fechaSeleccionada!=""?31:32),c(2),p("disabled",!t.isFormValid()))},dependencies:[N,A,j,oe,se,le,re,ee,ie,ne,ae,V,q],styles:[".solicitud-turnos[_ngcontent-%COMP%]{display:flex;flex-direction:row}.filtros-laterales[_ngcontent-%COMP%]{display:flex;flex-direction:column;flex:30%;background-color:#212121}.filtros-laterales[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin-left:30px;margin-top:30px;margin-bottom:30px}form[_ngcontent-%COMP%]{margin-left:30px;display:flex;flex-direction:column}label[_ngcontent-%COMP%]{color:#ddd;font-family:ubuntu;margin-bottom:5px}select[_ngcontent-%COMP%]{background-color:#333;border:2px solid #f00;color:#fff;padding:10px;width:80%;max-width:500px;margin-bottom:10px;border-radius:5px;transition:border .3s ease;box-shadow:0 2px 5px #0000004d}select[_ngcontent-%COMP%]:focus{border:2px solid #fff;outline:none}select[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{background-color:#333;color:#fff}.error[_ngcontent-%COMP%]{color:#f33;font-size:1em;margin-top:5px}button[type=submit][_ngcontent-%COMP%]{margin-top:10px;background-color:red;border:none;color:#fff;padding:10px 20px;cursor:pointer;font-size:1em;border-radius:5px;margin-bottom:20px;max-width:150px}button[type=submit][_ngcontent-%COMP%]:hover{background-color:#c00;box-shadow:0 2px 5px #0003}button[type=submit][_ngcontent-%COMP%]:disabled{background-color:#666;cursor:not-allowed}.turnos[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex:70%;margin-bottom:30px}.calendario[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:left;margin-left:50px}.calendario[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin-top:30px;justify-content:center;align-items:center;margin-bottom:30px}.calendario[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-bottom:30px}.forbidden[_ngcontent-%COMP%]{filter:brightness(.5);pointer-events:none;opacity:.7}.forbidden[_ngcontent-%COMP%]   app-calendario[_ngcontent-%COMP%]{pointer-events:none;-webkit-user-select:none;user-select:none}.horarios[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:left;margin-left:70px}.horarios[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin-top:30px;justify-content:center;align-items:center;margin-bottom:30px}.horarios[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-bottom:30px}.horarios[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-top:30px;justify-content:right}"]})};var Re=[{path:"",component:L}],k=class o{static \u0275fac=function(e){return new(e||o)};static \u0275mod=I({type:o});static \u0275inj=w({imports:[U.forChild(Re),U]})};var me=class o{static \u0275fac=function(e){return new(e||o)};static \u0275mod=I({type:o});static \u0275inj=w({imports:[J,k,j,ce,V]})};export{me as SolicitarTurnoModule};
